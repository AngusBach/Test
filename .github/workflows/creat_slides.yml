name: create slides

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Install latest nodejs
      run: | 
          sudo apt install -y curl
          curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt-get update
          sudo apt-get install -y nodejs
    
    - name: Install marp
      run: sudo npm install -g @marp-team/marp-cli   

    - name: Install google chrome
      run: |
        sudo apt-get install -y fonts-liberation libasound2 libatk-bridge2.0-0 libatk1.0-0 libatspi2.0-0 libcairo2 \
        libcups2 libdrm2 libgbm1 libgtk-3-0 libnspr4 libnss3 libpango-1.0-0 libu2f-udev libvulkan1 libx11-6 \
        libxcb1 libxcomposite1 libxdamage1 libxext6 libxfixes3 libxkbcommon0 libxrandr2 xdg-utils
        wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo dpkg -i google-chrome-stable_current_amd64.deb
        sudo apt -f install -y

    # create main slides
    - name: Create a temporary artifact downloads folder
      working-directory: ${{github.workspace}}/docs/
      run: mkdir downloads

    - name: create main pdf
      working-directory: ${{github.workspace}}/docs/
      run: marp -c marp_config.yaml slides_learn2code_1.md -o downloads/slides_learn2code_1.pdf
    
    - name: Use the Upload Artifact GitHub Action
      uses: actions/upload-artifact@v2
      with: 
        name: assets-for-download
        path: downloads
